@model PizzaStoreMVC.UI.Models.User

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>User</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.FirstName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.FirstName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.LastName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.LastName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DefaultLocationName)
        </dt>
        <dd class="col-sm-10">
            @if (Model.DefaultLocationName == null)
            {
                <p>None</p>
            }
            else
            {
                @Html.DisplayFor(model => Model.DefaultLocationName)
            }
        </dd>
        <dd class="col-sm-10">
            Orders History:
                <ul>
            @foreach(var order in PizzaStoreLibrary.library.Models.Order.Orders.Where(o => o.UserId == Model.Id).ToList())
            {
                    <li>
                        @order.TotalPrice
                        @order.TimePlaced
                        @{ 
                            PizzaStoreLibrary.library.Models.Location location =
                            PizzaStoreLibrary.library.Models.Location.GetById(order.LocationId);

                            <pre>@location.Name</pre>
                        }
                    </li>
            }
                </ul>
        </dd>
    </dl>
</div>
<div>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    <a asp-action="Index">Back to List</a>
</div>
